generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           String           @id @default(cuid())
  name         String
  description  String?
  cost         Float
  unit         String?
  reference    String?
  sellingPrice Float
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  category     ProductCategory
  catalogs     CatalogProduct[]
}

model Catalog {
  id          String            @id @default(cuid())
  name        String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  description String?
  categories  CatalogCategory[]
  products    CatalogProduct[]
  devis       Devis[]
}

model CatalogCategory {
  id          String           @id @default(cuid())
  name        String
  description String?
  order       Int              @default(0)
  catalogId   String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  catalog     Catalog          @relation(fields: [catalogId], references: [id])
  services    CatalogService[]
}

model CatalogService {
  id          String            @id @default(cuid())
  name        String
  description String?
  price       Float
  quantity    Int               @default(1)
  unit        String?
  order       Int               @default(0)
  categoryId  String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  materials   CatalogMaterial[]
  category    CatalogCategory   @relation(fields: [categoryId], references: [id])
}

model CatalogMaterial {
  id          String         @id @default(cuid())
  name        String
  quantity    Int            @default(1)
  price       Float
  unit        String?
  reference   String?
  toChoose    Boolean        @default(false)
  serviceId   String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  description String?
  service     CatalogService @relation(fields: [serviceId], references: [id])
}

model DevisSection {
  id             String         @id @default(cuid())
  name           String
  devisId        String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  category       String         @default("DEFAULT")
  materialsTotal Float          @default(0)
  order          Int            @default(0)
  subTotal       Float          @default(0)
  devis          Devis          @relation(fields: [devisId], references: [id])
  services       DevisService[]
}

model DevisService {
  id          String   @id @default(cuid())
  name        String
  description String?
  quantity    Float    @default(1)
  price       Float
  unit        String   @default("m²")
  tva         Float    @default(20)
  categoryId  String?
  catalogId   String
  order       Int      @default(0)
  materials   DevisMaterial[]
  section     DevisSection @relation(fields: [sectionId], references: [id])
  sectionId   String
  deletedAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DevisMaterial {
  id          String   @id @default(cuid())
  name        String
  price       Float
  quantity    Float    @default(1)
  unit        String   @default("m²")
  reference   String?
  tva         Float    @default(20)
  order       Int      @default(0)
  service     DevisService @relation(fields: [serviceId], references: [id])
  serviceId   String
  deletedAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Devis {
  id             String         @id @default(cuid())
  number         String         @unique
  year           Int            @default(2024)
  reference      String?
  status         DevisStatus    @default(DRAFT)
  clientId       String
  catalogId      String
  totalHT        Float
  totalTTC       Float
  tva            Float          @default(20)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  prescriberId   String?
  expirationDate DateTime?
  paymentMethod  String?
  pilot          String?
  projectType    String?
  devisComments  String?
  showDevisComments Boolean     @default(false)
  orderFormComments String?
  showOrderFormComments Boolean  @default(false)
  showDescriptions Boolean      @default(false)
  catalog        Catalog        @relation(fields: [catalogId], references: [id])
  client         Client         @relation(fields: [clientId], references: [id])
  prescriber     Prescriber?    @relation(fields: [prescriberId], references: [id])
  sections       DevisSection[]
  invoices       Invoice[]
}

model Client {
  id           String      @id @default(cuid())
  name         String
  email        String?
  phone        String?
  address      String?
  city         String?
  postalCode   String?
  country      String?
  notes        String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  company      String?
  prescriberId String?
  prescriber   Prescriber? @relation(fields: [prescriberId], references: [id])
  devis        Devis[]
}

model Prescriber {
  id                         String   @id @default(cuid())
  name                       String
  email                      String?
  phone                      String?
  address                    String?
  city                       String?
  postalCode                 String?
  country                    String?
  company                    String?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  contact                    String?
  defaultAutoliquidation     Boolean  @default(false)
  defaultBillToPrescriber    Boolean  @default(false)
  defaultRetentionRate       Float    @default(5)
  logo                       String?
  mail1                      String?
  mail2                      String?
  mail3                      String?
  requiresRetentionGuarantee Boolean  @default(false)
  siret                      String?
  siteweb                    String?
  tel                        String?
  tel1                       String?
  tel2                       String?
  tel3                       String?
  tva                        String?
  clients                    Client[]
  devis                      Devis[]
}

model Invoice {
  id             String                  @id @default(cuid())
  number         String                  @unique
  status         InvoiceStatus           @default(DRAFT)
  devisId        String                  @unique
  totalHT        Float
  totalTTC       Float
  tva            Float                   @default(20)
  paymentDate    DateTime?
  dueDate        DateTime?
  createdAt      DateTime                @default(now())
  updatedAt      DateTime
  paymentStatus  PaymentStatus           @default(PENDING)
  devis          Devis                   @relation(fields: [devisId], references: [id])
  paymentHistory InvoicePaymentHistory[]
  retentionGuarantee RetentionGuarantee?
}

model CatalogProduct {
  id        String   @id @default(cuid())
  catalogId String
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  catalog   Catalog  @relation(fields: [catalogId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([catalogId, productId])
}

model InvoicePaymentHistory {
  id            String        @id @default(cuid())
  invoiceId     String
  paymentStatus PaymentStatus
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  invoice       Invoice       @relation(fields: [invoiceId], references: [id])
}

model RetentionGuarantee {
  id          String    @id @default(cuid())
  invoiceId   String    @unique
  rate        Float
  amount      Float
  releaseDate DateTime?
  notes       String?
  status      String    @default("PENDING")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  invoice     Invoice   @relation(fields: [invoiceId], references: [id])
}

model User {
  id        String   @id
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model DevisTemplate {
  id          String   @id @default(cuid())
  name        String
  description String
  sections    DevisTemplateSection[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DevisTemplateSection {
  id          String   @id @default(cuid())
  name        String
  services    DevisTemplateService[]
  template    DevisTemplate @relation(fields: [templateId], references: [id])
  templateId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DevisTemplateService {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  quantity    Float    @default(1)
  unit        String   @default("m²")
  tva         Float    @default(20)
  materials   DevisTemplateMaterial[]
  section     DevisTemplateSection @relation(fields: [sectionId], references: [id])
  sectionId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DevisTemplateMaterial {
  id          String   @id @default(cuid())
  name        String
  price       Float
  quantity    Float    @default(1)
  unit        String   @default("m²")
  tva         Float    @default(20)
  reference   String?
  service     DevisTemplateService @relation(fields: [serviceId], references: [id])
  serviceId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ProductCategory {
  MATERIAL
  SERVICE
  PRODUCT
}

enum DevisStatus {
  DRAFT
  SENT
  ACCEPTED
  REJECTED
  CANCELLED
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  CANCELLED
}
